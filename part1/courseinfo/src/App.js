const Header = (props) => {
  return <h1>{props.name}</h1>
}

const Part = (props) => {
  return (
    <p>{props.name} {props.exercises}</p>
  )
}

const Content = (props) => {
  return (
    <>
      <Part name={props.course.parts[0].name} exercises={props.course.parts[0].exercises} />
      <Part name={props.course.parts[1].name} exercises={props.course.parts[1].exercises} />
      <Part name={props.course.parts[2].name} exercises={props.course.parts[2].exercises} />
    </>
  )
}

//the solution for Content below was done for brevity, but needs to be separated into another subcomponent Part
/* const Content = (props) => {
    return props.parts.map((part) => {
      return <p key={part.name}>{part.name} {part.exercises}</p> 
    })
} */
//rendering multiple elements in a component requires a key so that React doesn't have to re-render the
//entire component if it needs to re-render a single element generated by this component

const Total = (props) => {
  let total = 0
  for (let i = 0; i < props.course.parts.length; i++)
    total += props.course.parts[i].exercises
  return (<p>Number of exercises {total}</p>)
}

const App = () => {
  const course = {name: 'Half Stack application development', parts: [{name: 'Fundamentals of React', exercises: 10},
                                                                      {name: 'Using props to pass data', exercises: 7},
                                                                      {name: 'State of a component', exercises: 14}]}
  return (
    <>
      <Header course={course} />
      <Content course={course} />
      <Total course={course} />
    </>
  )
}

export default App